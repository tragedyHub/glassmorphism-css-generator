{"version":3,"sources":["components/HelpRow/CodeResult/CodeResult.js","components/HelpRow/HelpRow.js","components/ResultPreview/ResultPreview.js","App.js","reportWebVitals.js","index.js"],"names":["CodeResult","props","className","imageUrl","blurCounter","saturationCounter","opacityCounter","RangeInput","styled","input","HelpRow","type","placeholder","value","onChange","e","setImageUrl","target","min","max","setBlurCounter","setOpacityCounter","setSaturationCounter","DisplayResultBlock","div","image","DisplayResultContent","blur","saturation","opacity","ResultPreview","App","imageUrlPlaceholder","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAuFeA,EArFI,SAACC,GAClB,OACE,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,oBAAd,iBACA,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,WAAhB,kBACA,sBAAMA,UAAU,UAAhB,SAA2B,SAE7B,sBAAKA,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,+BACA,uBAAMA,UAAU,gBAAhB,iBAEE,uBAAMA,UAAU,iBAAhB,cAAmCD,EAAME,SAAzC,OAFF,UAKF,qBAAKD,UAAU,oBAAf,SACE,uBAAMA,UAAU,WAAhB,iCAEE,sBAAMA,UAAU,gBAAhB,oBAFF,SAKF,sBAAMA,UAAU,UAAhB,SAA2B,MAC3B,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,WAAhB,mBACA,sBAAMA,UAAU,UAAhB,SAA2B,SAE7B,sBAAKA,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,8BACA,uBAAMA,UAAU,gBAAhB,kBAEE,uBAAMA,UAAU,iBAAhB,UAAkCD,EAAMG,YAAxC,QAFF,OAIA,uBAAMF,UAAU,gBAAhB,sBAEE,uBAAMA,UAAU,iBAAhB,UAAkCD,EAAMI,kBAAxC,OAFF,OANF,OAYA,sBAAKH,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,sCACA,uBAAMA,UAAU,gBAAhB,kBAEE,uBAAMA,UAAU,iBAAhB,UAAkCD,EAAMG,YAAxC,QAFF,OAIA,uBAAMF,UAAU,gBAAhB,sBAEE,uBAAMA,UAAU,iBAAhB,UAAkCD,EAAMI,kBAAxC,OAFF,OANF,OAYA,sBAAKH,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,+BACA,uBAAMA,UAAU,gBAAhB,kBAEE,uBAAMA,UAAU,iBAAhB,sBACYD,EAAMK,eAAiB,OAHrC,OAFF,OAWA,sBAAKJ,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,4BACA,sBAAMA,UAAU,gBAAhB,SACE,sBAAMA,UAAU,uBAAhB,oBAHJ,OAOA,sBAAKA,UAAU,oBAAf,UACE,sBAAMA,UAAU,WAAhB,qBACA,sBAAMA,UAAU,sBAAhB,iBACA,sBAAMA,UAAU,sBAAhB,mBACA,uBAAMA,UAAU,gBAAhB,kBAEE,sBAAMA,UAAU,iBAAhB,kCAFF,OAJF,OAUA,sBAAMA,UAAU,UAAhB,SAA2B,a,cC9E7BK,EAAaC,IAAOC,MAAV,0BA4DDC,EA1DC,SAAAT,GAGd,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,sBAAd,kCACA,uBACES,KAAK,OACLT,UAAU,sBACVU,YAAY,YACZC,MAAOZ,EAAME,SACbW,SAAU,SAACC,GAAD,OAAOd,EAAMe,YAAYD,EAAEE,OAAOJ,aAGhD,sBAAKX,UAAU,gBAAf,UACE,qBAAIA,UAAU,sBAAd,wBAAgDD,EAAMG,eACtD,cAACG,EAAD,CACEI,KAAK,QACLT,UAAU,QACVgB,IAAI,IACJC,IAAI,KACJN,MAAOZ,EAAMG,YACbU,SAAU,SAACC,GAAD,OAAOd,EAAMmB,eAAeL,EAAEE,OAAOJ,aAGnD,sBAAKX,UAAU,gBAAf,UACE,qBAAIA,UAAU,sBAAd,qBAA6CD,EAAMK,kBACnD,cAACC,EAAD,CACEI,KAAK,QACLT,UAAU,QACVgB,IAAI,IACJC,IAAI,MACJN,MAAOZ,EAAMK,eACbQ,SAAU,SAACC,GAAD,OAAOd,EAAMoB,kBAAkBN,EAAEE,OAAOJ,aAGtD,sBAAKX,UAAU,gBAAf,UACE,qBAAIA,UAAU,sBAAd,wBACcD,EAAMI,qBAEpB,cAACE,EAAD,CACEI,KAAK,QACLT,UAAU,QACVgB,IAAI,IACJC,IAAI,MACJN,MAAOZ,EAAMI,kBACbS,SAAU,SAACC,GAAD,OAAOd,EAAMqB,qBAAqBP,EAAEE,OAAOJ,qBCnD7DU,EAAqBf,IAAOgB,IAAV,yJACJ,SAACvB,GAAD,OAAWA,EAAMwB,SAM/BC,EAAuBlB,IAAOgB,IAAV,yWAMA,SAACvB,GAAD,OAAWA,EAAM0B,QAC5B,SAAC1B,GAAD,OAAWA,EAAM2B,WAAa,KACX,SAAC3B,GAAD,OAAWA,EAAM0B,QACpC,SAAC1B,GAAD,OAAWA,EAAM2B,WAAa,KACT,SAAC3B,GAAD,OAAWA,EAAM4B,QAAU,OAqEhDC,EAhEO,SAAC7B,GACrB,OACE,qBAAKC,UAAU,cAAf,SACE,cAACqB,EAAD,CAAoBE,MAAOxB,EAAME,SAAjC,SACE,eAACuB,EAAD,CACEC,KAAM1B,EAAMG,YACZyB,QAAS5B,EAAMK,eACfsB,WAAY3B,EAAMI,kBAHpB,UAKE,qBAAKH,UAAU,qBAAf,SACE,oBAAIA,UAAU,uBAAd,4BAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,yBACf,oBAAIA,UAAU,cAAd,0BAGJ,wBAAQA,UAAU,MAAlB,qBAEF,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,uBACf,oBAAIA,UAAU,cAAd,wBAGJ,wBAAQA,UAAU,MAAlB,qBAEF,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,0BACf,oBAAIA,UAAU,cAAd,2BAGJ,wBAAQA,UAAU,MAAlB,qBAEF,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,yBACf,oBAAIA,UAAU,cAAd,0BAGJ,wBAAQA,UAAU,MAAlB,gCClCC6B,EAxCH,WAAO,IAAD,EACVC,EACJ,kKAFc,EAIsBC,mBAAS,GAJ/B,mBAIT7B,EAJS,KAIIgB,EAJJ,OAK4Ba,mBAAS,KALrC,mBAKT3B,EALS,KAKOe,EALP,OAMkCY,mBAAS,KAN3C,mBAMT5B,EANS,KAMUiB,EANV,OAOgBW,mBAASD,GAPzB,mBAOT7B,EAPS,KAOCa,EAPD,KAShB,OACE,sBAAKd,UAAU,MAAf,UACE,cAAC,GAAD,GACEE,YAAaA,EACbE,eAAgBA,EAChBD,kBAAmBA,EACnBF,SAAUA,EACViB,eAAgBA,EAChBC,kBAAmBA,EACnBC,qBAAsBA,GAPxB,yBAQYnB,GARZ,4BASea,GATf,oCAUuBgB,GAVvB,IAYA,yBAAS9B,UAAU,iBAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAeC,SAAUA,EAAUC,YAAaA,EAAaE,eAAgBA,EAAgBD,kBAAmBA,IAChH,cAAC,EAAD,CACEF,SAAUA,EACVC,YAAaA,EACbE,eAAgBA,EAChBD,kBAAmBA,eCzBlB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0aa85c18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CodeResult = (props) => {\r\n  return (\r\n    <div className=\"code_result\">\r\n      <h1 className=\"code_result_title\">CSS</h1>\r\n      <div className=\"code_result_content\">\r\n        <div className=\"code_row\">\r\n          <span className=\"selector\">body</span>\r\n          <span className=\"bracket\">{\"{\"}</span>\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">background-image:</span>\r\n          <span className=\"property_cont\">\r\n            url(\r\n            <span className=\"property_value\">\"{props.imageUrl}\"</span>)\r\n          </span>\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">\r\n            background-position:\r\n            <span className=\"property_cont\">center</span>;\r\n          </span>\r\n        </div>\r\n        <span className=\"bracket\">{\"}\"}</span>\r\n        <div className=\"code_row mt\">\r\n          <span className=\"selector\">.card</span>\r\n          <span className=\"bracket\">{\"{\"}</span>\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">backdrop-filter:</span>\r\n          <span className=\"property_cont\">\r\n            blur(\r\n            <span className=\"property_value\">{props.blurCounter}px</span>)\r\n          </span>\r\n          <span className=\"property_cont\">\r\n            saturate(\r\n            <span className=\"property_value\">{props.saturationCounter}%</span>)\r\n          </span>\r\n          ;\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">-webkit-backdrop-filter:</span>\r\n          <span className=\"property_cont\">\r\n            blur(\r\n            <span className=\"property_value\">{props.blurCounter}px</span>)\r\n          </span>\r\n          <span className=\"property_cont\">\r\n            saturate(\r\n            <span className=\"property_value\">{props.saturationCounter}%</span>)\r\n          </span>\r\n          ;\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">background-color:</span>\r\n          <span className=\"property_cont\">\r\n            rgba(\r\n            <span className=\"property_value\">\r\n              0, 0, 0, {props.opacityCounter / 100}\r\n            </span>\r\n            )\r\n          </span>\r\n          ;\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">border-radius:</span>\r\n          <span className=\"property_cont\">\r\n            <span className=\"property_value green\">12px</span>\r\n          </span>\r\n          ;\r\n        </div>\r\n        <div className=\"property_code_row\">\r\n          <span className=\"property\">border:</span>\r\n          <span className=\"property_cont green\">1px</span>\r\n          <span className=\"property_cont white\">solid</span>\r\n          <span className=\"property_cont\">\r\n            rgba(\r\n            <span className=\"property_value\">255, 255, 255, 0.125</span>)\r\n          </span>\r\n          ;\r\n        </div>\r\n        <span className=\"bracket\">{\"}\"}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeResult;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst RangeInput = styled.input``;\r\n\r\nconst HelpRow = props => {\r\n  \r\n\r\n  return (\r\n    <div className=\"help_row\">\r\n      <div className=\"container\">\r\n        <div className=\"cont\">\r\n          <div className=\"help_row_item\">\r\n            <h1 className=\"help_row_item_title\">Background image URL</h1>\r\n            <input\r\n              type=\"text\"\r\n              className=\"help_row_item_input\"\r\n              placeholder=\"Image URL\"\r\n              value={props.imageUrl}\r\n              onChange={(e) => props.setImageUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"help_row_item\">\r\n            <h1 className=\"help_row_item_title\">Blur value {props.blurCounter}</h1>\r\n            <RangeInput\r\n              type=\"range\"\r\n              className=\"range\"\r\n              min=\"0\"\r\n              max=\"25\"\r\n              value={props.blurCounter}\r\n              onChange={(e) => props.setBlurCounter(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"help_row_item\">\r\n            <h1 className=\"help_row_item_title\">Opacity {props.opacityCounter}</h1>\r\n            <RangeInput\r\n              type=\"range\"\r\n              className=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={props.opacityCounter}\r\n              onChange={(e) => props.setOpacityCounter(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"help_row_item\">\r\n            <h1 className=\"help_row_item_title\">\r\n              Saturation {props.saturationCounter}\r\n            </h1>\r\n            <RangeInput\r\n              type=\"range\"\r\n              className=\"range\"\r\n              min=\"0\"\r\n              max=\"200\"\r\n              value={props.saturationCounter}\r\n              onChange={(e) => props.setSaturationCounter(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpRow;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst DisplayResultBlock = styled.div`\r\n  background: url(${(props) => props.image}) no-repeat center center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 0.3em;\r\n  display: flex;\r\n`;\r\nconst DisplayResultContent = styled.div`\r\n  margin: auto auto;\r\n  border-radius: 0.5em;\r\n  height: 65%;\r\n  width: 70%;\r\n  border: 1px solid #fff;\r\n  backdrop-filter: blur(${(props) => props.blur}px)\r\n    saturate(${(props) => props.saturation / 2}%);\r\n  -webkit-backdrop-filter: blur(${(props) => props.blur}px)\r\n    saturate(${(props) => props.saturation / 2}%);\r\n  background-color: rgba(0, 0, 0, ${(props) => props.opacity / 100});\r\n  border-radius: 12px;\r\n  border: 1px solid rgba(255, 255, 255, 0.125);\r\n`;\r\n\r\nconst ResultPreview = (props) => {\r\n  return (\r\n    <div className=\"result_card\">\r\n      <DisplayResultBlock image={props.imageUrl}>\r\n        <DisplayResultContent\r\n          blur={props.blurCounter}\r\n          opacity={props.opacityCounter}\r\n          saturation={props.saturationCounter}\r\n        >\r\n          <div className=\"result_content_row\">\r\n            <h1 className=\"result_content_title\">Team members</h1>\r\n          </div>\r\n          <div className=\"result_content_team\">\r\n            <div className=\"result_content_people_card\">\r\n              <div className=\"card_logo logo1\"></div>\r\n              <div className=\"card_column\">\r\n                <h1 className=\"card_title\">Chris Wood</h1>\r\n                <div className=\"status\">\r\n                  <div className=\"circle status_online\"></div>\r\n                  <h1 className=\"status_text\">Online</h1>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn\">Chat</button>\r\n            </div>\r\n            <div className=\"result_content_people_card\">\r\n              <div className=\"card_logo logo2\"></div>\r\n              <div className=\"card_column\">\r\n                <h1 className=\"card_title\">Jose Leos</h1>\r\n                <div className=\"status\">\r\n                  <div className=\"circle status_buzy\"></div>\r\n                  <h1 className=\"status_text\">Buzy</h1>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn\">Chat</button>\r\n            </div>\r\n            <div className=\"result_content_people_card\">\r\n              <div className=\"card_logo logo3\"></div>\r\n              <div className=\"card_column\">\r\n                <h1 className=\"card_title\">Jeny Green</h1>\r\n                <div className=\"status\">\r\n                  <div className=\"circle status_offline\"></div>\r\n                  <h1 className=\"status_text\">Offline</h1>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn\">Chat</button>\r\n            </div>\r\n            <div className=\"result_content_people_card\">\r\n              <div className=\"card_logo logo4\"></div>\r\n              <div className=\"card_column\">\r\n                <h1 className=\"card_title\">Neil Sims</h1>\r\n                <div className=\"status\">\r\n                  <div className=\"circle status_online\"></div>\r\n                  <h1 className=\"status_text\">Online</h1>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn\">Chat</button>\r\n            </div>\r\n          </div>\r\n        </DisplayResultContent>\r\n      </DisplayResultBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPreview;\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CodeResult from \"./components/HelpRow/CodeResult/CodeResult\";\nimport HelpRow from \"./components/HelpRow/HelpRow\";\nimport ResultPreview from \"./components/ResultPreview/ResultPreview\";\n\nconst App = () => {\n  const imageUrlPlaceholder =\n    \"https://images.unsplash.com/photo-1519681393784-d120267933ba?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1124&q=100\";\n\n  const [blurCounter, setBlurCounter] = useState(0);\n  const [opacityCounter, setOpacityCounter] = useState(100);\n  const [saturationCounter, setSaturationCounter] = useState(200);\n  const [imageUrl, setImageUrl] = useState(imageUrlPlaceholder);\n\n  return (\n    <div className=\"App\">\n      <HelpRow\n        blurCounter={blurCounter}\n        opacityCounter={opacityCounter}\n        saturationCounter={saturationCounter}\n        imageUrl={imageUrl}\n        setBlurCounter={setBlurCounter}\n        setOpacityCounter={setOpacityCounter}\n        setSaturationCounter={setSaturationCounter}\n        imageUrl={imageUrl}\n        setImageUrl={setImageUrl}\n        imageUrlPlaceholder={imageUrlPlaceholder}\n      />\n      <section className=\"result_section\">\n        <div className=\"container\">\n          <div className=\"cont\">\n            <ResultPreview imageUrl={imageUrl} blurCounter={blurCounter} opacityCounter={opacityCounter} saturationCounter={saturationCounter}/>\n            <CodeResult\n              imageUrl={imageUrl}\n              blurCounter={blurCounter}\n              opacityCounter={opacityCounter}\n              saturationCounter={saturationCounter}\n            />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}